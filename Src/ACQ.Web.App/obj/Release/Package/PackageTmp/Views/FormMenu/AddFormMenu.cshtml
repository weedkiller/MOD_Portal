@model  ACQ.Web.ViewModel.FormMenu.AddFormMenuViewModel
@{
    ViewBag.Title = "AddFormMenu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/assets/js/jquery.min.js"></script>
    @using (Html.BeginForm("AddFormMenu", "FormMenu", FormMethod.Post, htmlAttributes: new { autocomplete = "off", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <section class="container-FLUID d-flex justify-content-center align-items-center  pb-4 loginBox" style="flex: 1 0 auto;">
            <div class="col-md-8 bg-white">
                <div class="p-4">
                    <h1 class="h2 text-center" style=" color: #3f80ea !important">Add From Menu </h1>
                    <hr />
                    @Html.ValidationSummary()

                    <form class="needs-validation" id="#myform" novalidate>

                        <div class="form-group">
                            <label>Select Category</label>
                            <select id="FromName" class="form-control" name="FromName">
                                <option>Choose Category</option>
                                @if (Model != null)
                                {
                                    foreach (var icategory in Model.menuList)
                            {
                                <option value="@icategory.FromName">@icategory.From_menu</option>
                            }
                                }
                            </select>
                            <h7 id="categorycheck"></h7>
                        </div>

                        <div class="form-group" data-validate="Valid email is required: ex@abc.xyz">
                            <label for="emailaddress">Sub Menu</label>
                            @Html.TextBoxFor(x => x.From_menu, new { @class = " form-control prepended-form-control bb", required = "required", tabindex = "2" })
                            @Html.ValidationMessageFor(x => x.From_menu, null, new { @class = "danger" })
                        </div>
                        <div class="input-group-overlay cs-password-toggle form-group" style="margin-top: 25px;">
                            <label for="emailaddress">Action Name</label>
                            @Html.TextBoxFor(x => x.ActionName, new { @class = " form-control prepended-form-control bb", required = "required", tabindex = "2" })
                            @Html.ValidationMessageFor(x => x.ActionName, null, new { @class = "danger" })

                        </div>
                        <div class="input-group-overlay cs-password-toggle form-group" style="margin-top: 25px;">
                            <label for="emailaddress">Controller Name</label>
                            @Html.TextBoxFor(x => x.Controller, new { @class = " form-control prepended-form-control bb", required = "required", tabindex = "2" })
                            @Html.ValidationMessageFor(x => x.Controller, null, new { @class = "danger" })

                        </div>
                        <p id="required-passwordMsg" style="display: none;color: Red;">Please enter Password</p>


                        <h7 id="passwordcheck"> </h7>

                        <button class="btn btn-primary mt-4 mb-4 float-right" id="btnsubmit" type="submit" value="submit">Submit</button>

                    </form>
                </div>
            </div>
        </section>
    }

